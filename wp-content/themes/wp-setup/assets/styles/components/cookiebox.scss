// Styles
// name mixin after scss cookiebox
@mixin cookiebox($type: "") {
  // get Basesize in correct relation to design width
  $BS: getBaseSize($type);

  .cookiebox {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 33333;
    background-color: transparentize(#ffffff, 0.15);
    display: flex;
    justify-content: center;
    align-items: center;
    padding: $BS * 64;

    &__box {
      width: 100%;
      max-width: $BS * 800;
      margin: 0 auto;
      padding: $BS * 64;
      background-color: #eeeeee;
    }

    &__tabWrapper {
      display: flex;
      overflow: hidden;

      & > input[type="radio"] {
        display: none;

        &:checked {
          & + .cookiebox__tab {
            &:nth-child(2) {
              transform: translateX(0);
            }
            &:nth-child(4) {
              transform: translateX(-100%);
            }
          }
        }
      }
    }

    &__tab {
      width: 100%;
      flex-shrink: 0;
      transition: transform 0.2s ease-out;

      &:nth-child(2) {
        transform: translateX(-100%);
      }
    }

    &__title {
      font-weight: 700;
      margin-bottom: $BS * 32;
    }

    &__text {
      margin-bottom: $BS * 32;

      &--privacy {
        text-align: center;
        font-size: 0.8rem;
        margin-bottom: 0;
      }
    }

    &__options {
      margin-bottom: $BS * 32;
    }

    &__option {
      display: flex;
      margin-bottom: $BS * 16;

      label {
        margin-left: $BS * 16;
        display: flex;
        flex-direction: column;

        span {
          &:first-child {
            font-weight: 700;
          }
        }
      }
    }

    &__buttonWrapper {
      display: flex;
      margin-bottom: $BS * 32;

      &:last-child {
        margin-bottom: 0;
      }

      .button {
        margin: 0;
        flex-grow: 1;
        flex-shrink: 0;
        text-align: center;

        &:nth-child(2) {
          margin-left: $BS * 32;
        }
      }
    }
  }
}

// Add cookiebox
@include cookiebox();

// Add basic cookiebox with breakpoints
@each $Breakpoint in $Breakpoints {
  @include breakpoint(#{$Breakpoint}) {
    @include cookiebox(#{$Breakpoint});
  }
}
